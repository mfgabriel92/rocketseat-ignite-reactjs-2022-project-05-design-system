var i=Object.defineProperty;var r=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.63acad8a.js";import{c as e,A as l,M as c}from"./Props.f9d852ab.js";import"./jsx-runtime.7d7a59cf.js";import"./iframe.5a625793.js";import{T as d}from"./Tokens.09f330c0.js";import{l as u}from"./index.8c9ccee5.js";import"./string.cc0d0364.js";import"./index.3f605b27.js";import"./es.map.constructor.e67cc23a.js";import"./es.number.to-fixed.720de0b4.js";function m(){return m=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(o[a]=s[a])}return o},m.apply(this,arguments)}r(m,"_extends");const y={},g="wrapper";function p({components:o,...t}){return e(g,m({},y,t,{components:o,mdxType:"MDXLayout"}),e(c,{title:"Tokens/Line Heights",mdxType:"Meta"}),e("h1",null,"Line Heights"),e("p",null,"The system's line heights."),e(d,{tokens:u,isRem:!1,mdxType:"Tokens"}))}r(p,"MDXContent");p.isMDXComponent=!0;const h=r(()=>{throw new Error("Docs-only story")},"__page");h.parameters={docsOnly:!0};const n={title:"Tokens/Line Heights",includeStories:["__page"]},f={};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:()=>e(l,{mdxStoryNameToKey:f,mdxComponentAnnotations:n},e(p,null))};const X=["__page"];export{X as __namedExportsOrder,h as __page,n as default};
//# sourceMappingURL=line-height.stories.9b4ca70d.js.map
