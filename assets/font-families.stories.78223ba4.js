var i=Object.defineProperty;var r=(e,t)=>i(e,"name",{value:t,configurable:!0});import"./index.63acad8a.js";import{c as o,A as c,M as l}from"./Props.f9d852ab.js";import"./jsx-runtime.7d7a59cf.js";import"./iframe.5a625793.js";import{T as d}from"./Tokens.09f330c0.js";import{f as u}from"./index.8c9ccee5.js";import"./string.cc0d0364.js";import"./index.3f605b27.js";import"./es.map.constructor.e67cc23a.js";import"./es.number.to-fixed.720de0b4.js";function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},m.apply(this,arguments)}r(m,"_extends");const y={},f="wrapper";function p({components:e,...t}){return o(f,m({},y,t,{components:e,mdxType:"MDXLayout"}),o(l,{title:"Tokens/Fonts",mdxType:"Meta"}),o("h1",null,"Fonts"),o("p",null,"The system's fonts."),o(d,{tokens:u,isRem:!1,mdxType:"Tokens"}))}r(p,"MDXContent");p.isMDXComponent=!0;const T=r(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const n={title:"Tokens/Fonts",includeStories:["__page"]},x={};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:()=>o(c,{mdxStoryNameToKey:x,mdxComponentAnnotations:n},o(p,null))};const k=["__page"];export{k as __namedExportsOrder,T as __page,n as default};
//# sourceMappingURL=font-families.stories.78223ba4.js.map
